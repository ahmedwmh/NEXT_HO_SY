// نظام إدارة المستشفى الذكي - Smart Hospital Management System
// نظام متكامل لإدارة المستشفيات والمرضى والأطباء
// تم تطويره ليكون سريع الاستجابة ومحسن للأداء

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  DOCTOR
  STAFF
}

enum PermissionType {
  READ
  WRITE
  DELETE
  MANAGE
}

enum ResourceType {
  PATIENTS
  VISITS
  TESTS
  TREATMENTS
  OPERATIONS
  MEDICATIONS
  PRESCRIPTIONS
  REPORTS
  SETTINGS
  USERS
  HOSPITALS
  CITIES
  DISEASES
}

enum VisitStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  DRAFT
}

enum TestStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TreatmentStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum OperationStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      UserRole
  roleId    String?  // ربط بدور مخصص
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  doctorProfile Doctor?
  staffProfile  Staff?
  customRole    Role?           @relation(fields: [roleId], references: [id], onDelete: SetNull)
  permissions   UserPermission[]

  @@index([email])
  @@index([role])
  @@index([roleId])
  @@map("users")
}

// ===== PERMISSIONS SYSTEM =====
// نظام الصلاحيات المتقدم

model Permission {
  id          String         @id @default(cuid())
  name        String         @unique
  description String?
  resource    ResourceType
  action      PermissionType
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations
  rolePermissions RolePermission[]
  userPermissions UserPermission[]

  @@index([resource])
  @@index([action])
  @@index([isActive])
  @@map("permissions")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isSystem    Boolean  @default(false) // هل هي دور نظام (لا يمكن حذفها)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  rolePermissions RolePermission[]
  users          User[]

  @@index([name])
  @@index([isSystem])
  @@index([isActive])
  @@map("roles")
}

model RolePermission {
  id           String     @id @default(cuid())
  roleId       String
  permissionId String
  granted      Boolean    @default(true) // هل مُنحت الصلاحية أم مُنعت
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relations
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
  @@map("role_permissions")
}

model UserPermission {
  id           String     @id @default(cuid())
  userId       String
  permissionId String
  granted      Boolean    @default(true) // هل مُنحت الصلاحية أم مُنعت
  hospitalId   String?    // صلاحية محددة لمستشفى معين
  expiresAt    DateTime?  // تاريخ انتهاء الصلاحية
  grantedBy    String?    // من منح الصلاحية
  reason       String?    // سبب منح/منع الصلاحية
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relations
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  hospital   Hospital?  @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([permissionId])
  @@index([hospitalId])
  @@index([expiresAt])
  @@map("user_permissions")
}

model City {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  hospitals Hospital[]
  patients  Patient[]
  visits    Visit[]

  @@index([name])
  @@map("cities")
}

model Hospital {
  id        String   @id @default(cuid())
  name      String
  address   String
  phone     String?
  email     String?
  cityId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  city         City         @relation(fields: [cityId], references: [id], onDelete: Cascade)
  doctors      Doctor[]
  staff        Staff[]
  patients     Patient[]
  visits       Visit[]
  tests        Test[]
  treatments   Treatment[]
  operations   Operation[]
  prescriptions Prescription[]
  visitDrafts  VisitDraft[] // مسودات الزيارات
  
  // Hospital-specific medical data
  hospitalDiseases   HospitalDisease[]
  hospitalTests      HospitalTest[]
  hospitalTreatments HospitalTreatment[]
  hospitalOperations HospitalOperation[]
  treatmentCourses   TreatmentCourse[] // الكورسات العلاجية
  
  // Permissions
  userPermissions UserPermission[]

  @@index([cityId])
  @@index([name])
  @@map("hospitals")
}

model Doctor {
  id          String   @id @default(cuid())
  userId      String   @unique
  hospitalId  String
  firstName   String
  lastName    String
  specialization String
  phone       String?
  licenseNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  hospital  Hospital   @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visits    Visit[]
  tests     Test[]
  treatments Treatment[]
  operations Operation[]
  medications Medication[]
  prescriptions Prescription[]
  visitDrafts VisitDraft[]
  treatmentCourses TreatmentCourse[] // الكورسات العلاجية

  @@index([hospitalId])
  @@index([specialization])
  @@index([firstName, lastName])
  @@map("doctors")
}

model Staff {
  id         String   @id @default(cuid())
  userId     String   @unique
  hospitalId String
  firstName  String
  lastName   String
  position   String
  phone      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([hospitalId])
  @@index([position])
  @@index([firstName, lastName])
  @@map("staff")
}

model Patient {
  id              String    @id @default(cuid())
  cityId          String
  hospitalId      String
  patientNumber   String    @unique // رقم المريض الفريد
  firstName       String
  lastName        String
  middleName      String?   // الاسم الأوسط
  dateOfBirth     DateTime
  gender          String
  nationality     String?   // الجنسية
  idNumber        String?   // رقم الهوية
  passportNumber  String?   // رقم جواز السفر
  phone           String?
  email           String?
  address         String?
  emergencyContact String?
  emergencyPhone  String?   // رقم الطوارئ
  bloodType       String?
  allergies       String?
  medicalHistory  String?
  profilePhoto    String?   // صورة المريض الرئيسية
  insuranceNumber String?   // رقم التأمين
  insuranceCompany String?  // شركة التأمين
  maritalStatus   String?   // الحالة الاجتماعية
  occupation      String?   // المهنة
  notes           String?   // ملاحظات إضافية
  isActive        Boolean   @default(true) // حالة المريض
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  city        City         @relation(fields: [cityId], references: [id], onDelete: Cascade)
  hospital    Hospital     @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visits      Visit[]
  tests       Test[]
  treatments  Treatment[]
  operations  Operation[]
  diseases    Disease[]
  medications Medication[]
  attachments Attachment[]
  prescriptions Prescription[]
  images      PatientImage[] // صور إضافية للمريض
  visitDrafts VisitDraft[] // مسودات الزيارات
  treatmentCourses TreatmentCourse[] // الكورسات العلاجية

  @@index([cityId])
  @@index([hospitalId])
  @@index([patientNumber])
  @@index([firstName, lastName])
  @@index([phone])
  @@index([email])
  @@index([isActive])
  @@index([createdAt])
  @@index([idNumber])
  @@index([hospitalId, isActive])
  @@index([cityId, isActive])
  @@index([firstName, lastName, isActive])
  @@index([hospitalId, createdAt])
  @@map("patients")
}

model Visit {
  id          String      @id @default(cuid())
  patientId   String
  doctorId    String?
  hospitalId  String?
  cityId      String?
  scheduledAt DateTime
  status      VisitStatus @default(SCHEDULED)
  currentStep Int         @default(1)
  notes       String?
  diagnosis   String?
  prescription String?
  symptoms    String?     // الأعراض
  vitalSigns  String?     // العلامات الحيوية
  temperature String?     // درجة الحرارة
  bloodPressure String?   // ضغط الدم
  heartRate   String?     // معدل النبض
  weight      String?     // الوزن
  height      String?     // الطول
  images      String[]    // صور الكشف
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor?  @relation(fields: [doctorId], references: [id], onDelete: SetNull)
  hospital Hospital? @relation(fields: [hospitalId], references: [id], onDelete: SetNull)
  city     City?    @relation(fields: [cityId], references: [id], onDelete: SetNull)
  prescriptions Prescription[]
  tests    Test[]   // Tests related to this visit
  treatments Treatment[] // Treatments related to this visit
  operations Operation[] // Operations related to this visit
  medications Medication[] // Medications prescribed in this visit

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([cityId])
  @@index([scheduledAt])
  @@index([status])
  @@index([createdAt])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([scheduledAt, status])
  @@index([hospitalId, scheduledAt])
  @@index([patientId, scheduledAt])
  @@map("visits")
}

model Test {
  id          String     @id @default(cuid())
  patientId   String
  doctorId    String
  hospitalId  String
  visitId     String?    // Optional visit relationship
  name        String
  description String?
  scheduledAt DateTime
  status      TestStatus @default(SCHEDULED)
  results     String?
  notes       String?
  images      String[]   // صور الفحص
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visit    Visit?   @relation(fields: [visitId], references: [id], onDelete: SetNull)

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([visitId])
  @@index([scheduledAt])
  @@index([status])
  @@index([name])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([patientId, scheduledAt])
  @@index([hospitalId, scheduledAt])
  @@map("tests")
}

model Treatment {
  id          String          @id @default(cuid())
  patientId   String
  doctorId    String
  hospitalId  String
  visitId     String?         // Optional visit relationship
  name        String
  description String?
  scheduledAt DateTime
  status      TreatmentStatus @default(SCHEDULED)
  notes       String?
  images      String[]        // صور العلاج
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visit    Visit?   @relation(fields: [visitId], references: [id], onDelete: SetNull)

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([visitId])
  @@index([scheduledAt])
  @@index([status])
  @@index([name])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([patientId, scheduledAt])
  @@index([hospitalId, scheduledAt])
  @@map("treatments")
}

model Operation {
  id          String          @id @default(cuid())
  patientId   String
  doctorId    String
  hospitalId  String
  visitId     String?         // Optional visit relationship
  name        String
  description String?
  scheduledAt DateTime
  status      OperationStatus @default(SCHEDULED)
  notes       String?
  images      String[]        // صور العملية
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visit    Visit?   @relation(fields: [visitId], references: [id], onDelete: SetNull)

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([visitId])
  @@index([scheduledAt])
  @@index([status])
  @@index([name])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([patientId, scheduledAt])
  @@index([hospitalId, scheduledAt])
  @@map("operations")
}

model Disease {
  id          String   @id @default(cuid())
  patientId   String
  name        String
  description String?
  diagnosedAt DateTime
  severity    String?
  status      String?  // Active, Cured, Chronic, etc.
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@index([patientId])
  @@index([name])
  @@index([diagnosedAt])
  @@index([status])
  @@map("diseases")
}

model Medication {
  id          String   @id @default(cuid())
  patientId   String
  doctorId    String
  visitId     String?  // Optional visit relationship
  name        String
  dosage      String?  // الجرعة
  frequency   String?  // التكرار
  duration    String?  // المدة
  instructions String? // التعليمات
  startDate   DateTime
  endDate     DateTime?
  status      String?  // Active, Completed, Discontinued
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor  Doctor  @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  visit   Visit?  @relation(fields: [visitId], references: [id], onDelete: SetNull)

  @@index([patientId])
  @@index([doctorId])
  @@index([visitId])
  @@index([name])
  @@index([startDate])
  @@index([status])
  @@index([patientId, status])
  @@index([doctorId, status])
  @@index([patientId, startDate])
  @@index([doctorId, startDate])
  @@map("medications")
}

model PatientImage {
  id        String   @id @default(cuid())
  patientId String
  imageUrl  String   // رابط الصورة
  title     String?  // عنوان الصورة
  description String? // وصف الصورة
  type      String?  // نوع الصورة (profile, document, medical, etc.)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@index([patientId])
  @@index([type])
  @@index([isActive])
  @@map("patient_images")
}

model Prescription {
  id          String   @id @default(cuid())
  patientId   String
  doctorId    String
  hospitalId  String
  visitId     String?  // ربط بالزيارة
  medication  String   // اسم الدواء
  dosage      String   // الجرعة
  frequency   String   // التكرار
  duration    String   // المدة
  instructions String? // التعليمات
  startDate   DateTime
  endDate     DateTime?
  status      String   @default("ACTIVE") // ACTIVE, COMPLETED, CANCELLED
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  visit    Visit?   @relation(fields: [visitId], references: [id], onDelete: SetNull)

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([visitId])
  @@index([medication])
  @@index([status])
  @@index([startDate])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([patientId, startDate])
  @@index([hospitalId, startDate])
  @@map("prescriptions")
}

model Attachment {
  id          String   @id @default(cuid())
  patientId   String
  fileName    String
  fileUrl     String   // Supabase storage URL
  fileType    String
  fileSize    Int?     // حجم الملف بالبايت
  category    String?  // فئة المرفق (تقارير، صور، وثائق)
  description String?
  isPrivate   Boolean  @default(false) // مرفق خاص
  uploadedBy  String?  // من رفع الملف
  uploadedAt  DateTime @default(now())

  // Relations
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@index([patientId])
  @@index([fileType])
  @@index([category])
  @@index([uploadedAt])
  @@index([isPrivate])
  @@map("attachments")
}

// ===== DRAFT SYSTEM TABLES =====
// نظام المسودات المنفصل للزيارات

model VisitDraft {
  id          String      @id @default(cuid())
  patientId   String
  doctorId    String?
  hospitalId  String?
  scheduledAt DateTime
  status      VisitStatus @default(DRAFT)
  notes       String?
  diagnosis   String?
  prescription String?
  symptoms    String?
  vitalSigns  String?
  temperature String?
  bloodPressure String?
  heartRate   String?
  weight      String?
  height      String?
  images      String[]
  
  // Step tracking
  currentStep Int         @default(1)
  isCompleted Boolean     @default(false)
  
  // Auto-save tracking
  lastSavedAt DateTime    @default(now())
  autoSaveEnabled Boolean @default(true)
  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  patient  Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor   Doctor?  @relation(fields: [doctorId], references: [id], onDelete: SetNull)
  hospital Hospital? @relation(fields: [hospitalId], references: [id], onDelete: SetNull)
  
  // Draft-specific relations
  draftTests      VisitDraftTest[]
  draftDiseases   VisitDraftDisease[]
  draftTreatments VisitDraftTreatment[]
  draftOperations VisitDraftOperation[]
  draftMedications VisitDraftMedication[]

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([scheduledAt])
  @@index([status])
  @@index([currentStep])
  @@index([isCompleted])
  @@index([lastSavedAt])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([patientId, isCompleted])
  @@index([hospitalId, isCompleted])
  @@index([patientId, lastSavedAt])
  @@map("visit_drafts")
}

model VisitDraftTest {
  id          String     @id @default(cuid())
  draftId     String
  name        String
  description String?
  scheduledAt DateTime
  status      TestStatus @default(SCHEDULED)
  results     String?
  notes       String?
  images      String[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relations
  draft VisitDraft @relation(fields: [draftId], references: [id], onDelete: Cascade)

  @@index([draftId])
  @@index([name])
  @@index([scheduledAt])
  @@index([status])
  @@map("visit_draft_tests")
}

model VisitDraftDisease {
  id          String   @id @default(cuid())
  draftId     String
  name        String
  description String?
  diagnosedAt DateTime
  severity    String?
  status      String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  draft VisitDraft @relation(fields: [draftId], references: [id], onDelete: Cascade)

  @@index([draftId])
  @@index([name])
  @@index([diagnosedAt])
  @@index([status])
  @@map("visit_draft_diseases")
}

model VisitDraftTreatment {
  id          String          @id @default(cuid())
  draftId     String
  name        String
  description String?
  scheduledAt DateTime
  status      TreatmentStatus @default(SCHEDULED)
  notes       String?
  images      String[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  draft VisitDraft @relation(fields: [draftId], references: [id], onDelete: Cascade)

  @@index([draftId])
  @@index([name])
  @@index([scheduledAt])
  @@index([status])
  @@map("visit_draft_treatments")
}

model VisitDraftOperation {
  id          String          @id @default(cuid())
  draftId     String
  name        String
  description String?
  scheduledAt DateTime
  status      OperationStatus @default(SCHEDULED)
  notes       String?
  images      String[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  draft VisitDraft @relation(fields: [draftId], references: [id], onDelete: Cascade)

  @@index([draftId])
  @@index([name])
  @@index([scheduledAt])
  @@index([status])
  @@map("visit_draft_operations")
}

model VisitDraftMedication {
  id          String   @id @default(cuid())
  draftId     String
  name        String
  dosage      String?
  frequency   String?
  duration    String?
  instructions String?
  startDate   DateTime
  endDate     DateTime?
  status      String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  draft VisitDraft @relation(fields: [draftId], references: [id], onDelete: Cascade)

  @@index([draftId])
  @@index([name])
  @@index([startDate])
  @@index([status])
  @@map("visit_draft_medications")
}

// ===== HOSPITAL-SPECIFIC MEDICAL DATA =====
// بيانات طبية مخصصة لكل مستشفى

model HospitalDisease {
  id          String   @id @default(cuid())
  hospitalId  String
  name        String
  description String?
  category    String?  // فئة المرض (قلبية، عصبية، إلخ)
  severity    String?  // مستوى الخطورة
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([hospitalId])
  @@index([name])
  @@index([category])
  @@index([isActive])
  @@map("hospital_diseases")
}

model HospitalTest {
  id          String   @id @default(cuid())
  hospitalId  String
  name        String
  description String?
  category    String?  // فئة الفحص (دم، أشعة، إلخ)
  duration    String?  // مدة الفحص
  cost        Decimal? // تكلفة الفحص
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([hospitalId])
  @@index([name])
  @@index([category])
  @@index([isActive])
  @@map("hospital_tests")
}

model HospitalTreatment {
  id               String   @id @default(cuid())
  hospitalId       String
  name             String
  description      String?
  category         String?  // فئة العلاج (دوائي، فيزيائي، إلخ)
  duration         String?  // مدة العلاج
  cost             Decimal? // تكلفة العلاج
  quantity         Int?     // الكمية الإجمالية
  reservedQuantity Int?     @default(0) // الكمية المحجوزة
  deliveredQuantity Int?    @default(0) // الكمية المسلمة
  expiredate       DateTime? // تاريخ انتهاء الصلاحية
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  // Relations
  treatmentCourses TreatmentCourse[] // الكورسات العلاجية

  @@index([hospitalId])
  @@index([name])
  @@index([category])
  @@index([isActive])
  @@index([expiredate])
  @@index([hospitalId, isActive])
  @@index([hospitalId, quantity])
  @@index([isActive, expiredate])
  @@index([hospitalId, isActive, expiredate])
  @@map("hospital_treatments")
}

model HospitalOperation {
  id          String   @id @default(cuid())
  hospitalId  String
  name        String
  description String?
  category    String?  // فئة العملية (جراحية، تنظيرية، إلخ)
  duration    String?  // مدة العملية
  cost        Decimal? // تكلفة العملية
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  hospital Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)

  @@index([hospitalId])
  @@index([name])
  @@index([category])
  @@index([isActive])
  @@map("hospital_operations")
}

// ===== TREATMENT COURSE SYSTEM =====
// نظام الكورس العلاجي لمتابعة المريض

enum TreatmentCourseStatus {
  CREATED      // تم إنشاء الكورس
  RESERVED     // تم حجز العلاج
  DELIVERED    // تم تسليم العلاج
  IN_PROGRESS  // جاري العلاج
  COMPLETED    // تم إكمال الكورس
  CANCELLED    // تم إلغاء الكورس
}

enum TreatmentDoseStatus {
  SCHEDULED    // مجدول
  TAKEN        // تم أخذه
  MISSED       // فات الموعد
  SKIPPED      // تم تخطيه
}

model TreatmentCourse {
  id              String                @id @default(cuid())
  patientId       String
  doctorId        String
  hospitalId      String
  hospitalTreatmentId String            // ربط بالعلاج من المخزون
  courseName      String                // اسم الكورس العلاجي
  description     String?               // وصف الكورس
  // إدارة المخزون والكميات
  totalQuantity   Int                   // الكمية الإجمالية المطلوبة
  reservedQuantity Int                  @default(0) // الكمية المحجوزة
  deliveredQuantity Int                 @default(0) // الكمية المسلمة
  remainingQuantity Int                 // الكمية المتبقية
  availableInStock Int                  @default(0) // الكمية المتاحة في المخزون
  // التواريخ
  startDate       DateTime              // تاريخ بداية الكورس
  endDate         DateTime?             // تاريخ نهاية الكورس المتوقع
  // الحالة والمتابعة
  status          TreatmentCourseStatus @default(CREATED)
  isReserved      Boolean               @default(false) // هل تم حجز الدواء؟
  isDelivered     Boolean               @default(false) // هل تم تسليم الدواء؟
  // التفاصيل الإضافية
  instructions    String?               // تعليمات خاصة
  notes           String?               // ملاحظات
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt

  // Relations
  patient           Patient             @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor            Doctor              @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  hospital          Hospital            @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  hospitalTreatment HospitalTreatment   @relation(fields: [hospitalTreatmentId], references: [id], onDelete: Cascade)
  doses             TreatmentDose[]     // جرعات العلاج

  @@index([patientId])
  @@index([doctorId])
  @@index([hospitalId])
  @@index([hospitalTreatmentId])
  @@index([status])
  @@index([startDate])
  @@index([endDate])
  @@index([patientId, status])
  @@index([hospitalId, status])
  @@index([doctorId, status])
  @@index([hospitalTreatmentId, status])
  @@index([patientId, startDate])
  @@index([hospitalId, startDate])
  @@map("treatment_courses")
}

model TreatmentDose {
  id                String              @id @default(cuid())
  courseId          String
  doseNumber        Int                 // رقم الجرعة (1, 2, 3...)
  // جدولة الجرعة
  scheduledDate     DateTime            // تاريخ الجرعة المجدول
  scheduledTime     String?             // وقت الجرعة (صباح، مساء، إلخ)
  quantity          Int                 // كمية هذه الجرعة
  // تتبع الالتزام
  status            TreatmentDoseStatus @default(SCHEDULED)
  takenAt           String?             // وقت أخذ الجرعة الفعلي (HH:MM)
  takenDate         DateTime?           // تاريخ أخذ الجرعة الفعلي
  isTaken           Boolean             @default(false) // هل تم أخذ الجرعة؟
  isOnTime          Boolean             @default(false) // هل تم أخذها في الموعد؟
  // التفاصيل الإضافية
  notes             String?             // ملاحظات على الجرعة
  sideEffects       String?             // آثار جانبية (إن وجدت)
  takenBy           String?             // من سلم الجرعة
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt

  // Relations
  course TreatmentCourse @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@index([courseId])
  @@index([scheduledDate])
  @@index([status])
  @@index([doseNumber])
  @@map("treatment_doses")
}

