require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

// Create Supabase client
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);

async function main() {
  console.log('๐ฅ ุจุฏุก ุฅูุดุงุก ุจูุงูุงุช ุงููุณุชุดูู ุจุงุณุชุฎุฏุงู Supabase...');
  
  try {
    // 1. Insert cities
    console.log('๐๏ธ ุฅูุดุงุก ุงููุฏู...');
    const cities = [
      { name: 'ุจุบุฏุงุฏ' },
      { name: 'ุงูุจุตุฑุฉ' },
      { name: 'ุงูููุตู' },
      { name: 'ุฃุฑุจูู' }
    ];
    
    for (const city of cities) {
      const { data, error } = await supabase
        .from('cities')
        .upsert(city, { onConflict: 'name' })
        .select();
      
      if (error) {
        console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุฏููุฉ:', error);
      } else {
        console.log(`โ ุชู ุฅูุดุงุก ุงููุฏููุฉ: ${city.name}`);
      }
    }

    // 2. Get cities for hospital creation
    const { data: citiesData } = await supabase.from('cities').select('*');
    const baghdadCity = citiesData?.find(c => c.name === 'ุจุบุฏุงุฏ');

    // 3. Insert hospitals
    console.log('\n๐ฅ ุฅูุดุงุก ุงููุณุชุดููุงุช...');
    const hospitals = [
      {
        name: 'ูุณุชุดูู ุจุบุฏุงุฏ ุงูุชุนูููู',
        address: 'ุดุงุฑุน ุงูุฑุดูุฏุ ุจุบุฏุงุฏุ ุงูุนุฑุงู',
        phone: '+964-1-234-5678',
        email: 'info@baghdadhospital.edu.iq',
        cityId: baghdadCity?.id
      },
      {
        name: 'ูุณุชุดูู ุงูุจุตุฑุฉ ุงูุนุงู',
        address: 'ุดุงุฑุน ุงูููุฑููุดุ ุงูุจุตุฑุฉุ ุงูุนุฑุงู',
        phone: '+964-40-123-4567',
        email: 'info@basrahhospital.gov.iq',
        cityId: citiesData?.find(c => c.name === 'ุงูุจุตุฑุฉ')?.id
      }
    ];

    for (const hospital of hospitals) {
      const { data, error } = await supabase
        .from('hospitals')
        .insert(hospital)
        .select();
      
      if (error) {
        console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุชุดูู:', error);
      } else {
        console.log(`โ ุชู ุฅูุดุงุก ุงููุณุชุดูู: ${hospital.name}`);
      }
    }

    // 4. Get hospitals for user creation
    const { data: hospitalsData } = await supabase.from('hospitals').select('*');
    const baghdadHospital = hospitalsData?.find(h => h.name === 'ูุณุชุดูู ุจุบุฏุงุฏ ุงูุชุนูููู');

    // 5. Insert users
    console.log('\n๐ค ุฅูุดุงุก ุงููุณุชุฎุฏููู...');
    const users = [
      {
        email: 'admin@hospital.com',
        password: 'admin123',
        role: 'ADMIN'
      },
      {
        email: 'doctor@hospital.com',
        password: 'doctor123',
        role: 'DOCTOR'
      },
      {
        email: 'staff@hospital.com',
        password: 'staff123',
        role: 'STAFF'
      }
    ];

    for (const user of users) {
      const { data, error } = await supabase
        .from('users')
        .upsert(user, { onConflict: 'email' })
        .select();
      
      if (error) {
        console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุชุฎุฏู:', error);
      } else {
        console.log(`โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู: ${user.email}`);
      }
    }

    // 6. Get users for profile creation
    const { data: usersData } = await supabase.from('users').select('*');
    const doctorUser = usersData?.find(u => u.email === 'doctor@hospital.com');
    const staffUser = usersData?.find(u => u.email === 'staff@hospital.com');

    // 7. Insert doctor profile
    console.log('\n๐จโโ๏ธ ุฅูุดุงุก ุงูุทุจูุจ...');
    const { data: doctorData, error: doctorError } = await supabase
      .from('doctors')
      .insert({
        userId: doctorUser?.id,
        hospitalId: baghdadHospital?.id,
        firstName: 'ุฏ. ุฃุญูุฏ',
        lastName: 'ุงููุญููุฏ',
        specialization: 'ุฃูุฑุงุถ ุงูููุจ',
        phone: '+964-770-123-4567',
        licenseNumber: 'MD-123456'
      })
      .select();

    if (doctorError) {
      console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุทุจูุจ:', doctorError);
    } else {
      console.log('โ ุชู ุฅูุดุงุก ุงูุทุจูุจ: ุฏ. ุฃุญูุฏ ุงููุญููุฏ');
    }

    // 8. Insert staff profile
    console.log('\n๐ฅ ุฅูุดุงุก ุงูููุธู...');
    const { data: staffData, error: staffError } = await supabase
      .from('staff')
      .insert({
        userId: staffUser?.id,
        hospitalId: baghdadHospital?.id,
        firstName: 'ูุงุทูุฉ',
        lastName: 'ุงูุญุณู',
        position: 'ููุฑุถ',
        phone: '+964-770-234-5678'
      })
      .select();

    if (staffError) {
      console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูููุธู:', staffError);
    } else {
      console.log('โ ุชู ุฅูุดุงุก ุงูููุธู: ูุงุทูุฉ ุงูุญุณู');
    }

    // 9. Insert sample patient
    console.log('\n๐ค ุฅูุดุงุก ุงููุฑูุถ...');
    const { data: patientData, error: patientError } = await supabase
      .from('patients')
      .insert({
        cityId: baghdadCity?.id,
        hospitalId: baghdadHospital?.id,
        patientNumber: 'P001',
        firstName: 'ูุญูุฏ',
        lastName: 'ุงูุญุณู',
        dateOfBirth: '1985-03-15',
        gender: 'ุฐูุฑ',
        phone: '+964-770-123-4567',
        email: 'mohammed.hassan@email.com',
        address: 'ุดุงุฑุน ุงูุฑุดูุฏุ ุจุบุฏุงุฏุ ุงูุนุฑุงู',
        emergencyContact: '+964-770-123-4568',
        bloodType: 'A+',
        allergies: 'ุงูุจูุณููู',
        medicalHistory: 'ูุง ููุฌุฏ ุชุงุฑูุฎ ูุฑุถู ููู',
        isActive: true
      })
      .select();

    if (patientError) {
      console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุฑูุถ:', patientError);
    } else {
      console.log('โ ุชู ุฅูุดุงุก ุงููุฑูุถ: ูุญูุฏ ุงูุญุณู');
    }

    console.log('\n๐ ุชู ุฅูุดุงุก ุงูุจูุงูุงุช ุจูุฌุงุญ!');
    console.log('\n๐ ุจูุงูุงุช ุงูุฏุฎูู:');
    console.log('- ุงูุฅุฏุงุฑุฉ: admin@hospital.com / admin123');
    console.log('- ุงูุทุจูุจ: doctor@hospital.com / doctor123');
    console.log('- ุงูููุธู: staff@hospital.com / staff123');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุจูุงูุงุช:', error);
  }
}

main();
